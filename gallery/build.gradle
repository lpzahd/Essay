apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: com.lpzahd.plugin.AopPlugin

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]

    implementation rootProject.ext.dependencies["fresco"]
    implementation rootProject.ext.dependencies["fresco-gif"]
    implementation rootProject.ext.dependencies["fresco-webp"]
    implementation rootProject.ext.dependencies["fresco-webpsupport"]
    implementation rootProject.ext.dependencies["fresco-okhttp3"]

    implementation rootProject.ext.dependencies["photodraweeview"]
    implementation rootProject.ext.dependencies["fresco-processors"]

    implementation rootProject.ext.dependencies["okhttp"]

    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxbinding"]

    implementation project(':waiter')
    implementation project(':atool')
    implementation project(':jtool')
    implementation project(':config')
    implementation project(':common')
    implementation project(':view')
    implementation project(':aop')
}
repositories {
    mavenCentral()
}
